; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\memp.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\memp.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931 -I..\Inc -I..\Drivers\STM32F1xx_HAL_Driver\Inc\Legacy -I..\Drivers\STM32F1xx_HAL_Driver\Inc -I..\Drivers\CMSIS\Device -I..\Drivers\CMSIS\Include -I..\Middlewares\Third_Party\LwIP\src\include -I..\Middlewares\Third_Party\LwIP\system -I..\Middlewares\Third_Party\LwIP\src\include\netif\ppp -I..\Middlewares\Third_Party\LwIP\src\include\lwip -I..\Middlewares\Third_Party\LwIP\src\include\lwip\apps -I..\Middlewares\Third_Party\LwIP\src\include\lwip\priv -I..\Middlewares\Third_Party\LwIP\src\include\lwip\prot -I..\Middlewares\Third_Party\LwIP\src\include\netif -I..\Middlewares\Third_Party\LwIP\src\include\posix -I..\Middlewares\Third_Party\LwIP\src\include\posix\sys -I..\Middlewares\Third_Party\LwIP\system\arch -I..\App -I..\Middlewares\Third_Party\LwIP\system -I.\RTE\_f107vc -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=530 -DSTM32F10X_CL -D_RTE_ -DUSE_HAL_DRIVER -DSTM32F107xC --omf_browse=.\objects\memp.crf ..\Middlewares\Third_Party\LwIP\src\core\memp.c]
                          THUMB

                          AREA ||i.do_memp_free_pool||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  do_memp_free_pool PROC
;;;358    static void
;;;359    do_memp_free_pool(const struct memp_desc *desc, void *mem)
000000  b570              PUSH     {r4-r6,lr}
;;;360    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;361      struct memp *memp;
;;;362      SYS_ARCH_DECL_PROTECT(old_level);
;;;363    
;;;364      LWIP_ASSERT("memp_free: mem properly aligned",
000006  07a0              LSLS     r0,r4,#30
000008  d006              BEQ      |L1.24|
00000a  a306              ADR      r3,|L1.36|
00000c  f44f72b6          MOV      r2,#0x16c
000010  a110              ADR      r1,|L1.84|
000012  a018              ADR      r0,|L1.116|
000014  f7fffffe          BL       __2printf
                  |L1.24|
;;;365                  ((mem_ptr_t)mem % MEM_ALIGNMENT) == 0);
;;;366    
;;;367      /* cast through void* to get rid of alignment warnings */
;;;368      memp = (struct memp *)(void *)((u8_t *)mem - MEMP_SIZE);
;;;369    
;;;370      SYS_ARCH_PROTECT(old_level);
;;;371    
;;;372    #if MEMP_OVERFLOW_CHECK == 1
;;;373      memp_overflow_check_element(memp, desc);
;;;374    #endif /* MEMP_OVERFLOW_CHECK */
;;;375    
;;;376    #if MEMP_STATS
;;;377      desc->stats->used--;
;;;378    #endif
;;;379    
;;;380    #if MEMP_MEM_MALLOC
;;;381      LWIP_UNUSED_ARG(desc);
;;;382      SYS_ARCH_UNPROTECT(old_level);
;;;383      mem_free(memp);
;;;384    #else /* MEMP_MEM_MALLOC */
;;;385      memp->next = *desc->tab;
000018  68a8              LDR      r0,[r5,#8]
00001a  6800              LDR      r0,[r0,#0]
00001c  6020              STR      r0,[r4,#0]
;;;386      *desc->tab = memp;
00001e  68a8              LDR      r0,[r5,#8]
000020  6004              STR      r4,[r0,#0]
;;;387    
;;;388    #if MEMP_SANITY_CHECK
;;;389      LWIP_ASSERT("memp sanity", memp_sanity(desc));
;;;390    #endif /* MEMP_SANITY_CHECK */
;;;391    
;;;392      SYS_ARCH_UNPROTECT(old_level);
;;;393    #endif /* !MEMP_MEM_MALLOC */
;;;394    }
000022  bd70              POP      {r4-r6,pc}
;;;395    
                          ENDP

                  |L1.36|
000024  2e2e5c4d          DCB      "..\\Middlewares\\Third_Party\\LwIP\\src\\core\\memp.c",0
000028  6964646c
00002c  65776172
000030  65735c54
000034  68697264
000038  5f506172
00003c  74795c4c
000040  7749505c
000044  7372635c
000048  636f7265
00004c  5c6d656d
000050  702e6300
                  |L1.84|
000054  6d656d70          DCB      "memp_free: mem properly aligned",0
000058  5f667265
00005c  653a206d
000060  656d2070
000064  726f7065
000068  726c7920
00006c  616c6967
000070  6e656400
                  |L1.116|
000074  41737365          DCB      "Assertion ""%s"" failed at line %d in %s\n",0
000078  7274696f
00007c  6e202225
000080  73222066
000084  61696c65
000088  64206174
00008c  206c696e
000090  65202564
000094  20696e20
000098  25730a00

                          AREA ||i.do_memp_malloc_pool||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  do_memp_malloc_pool PROC
;;;244    #if !MEMP_OVERFLOW_CHECK
;;;245    do_memp_malloc_pool(const struct memp_desc *desc)
000000  b510              PUSH     {r4,lr}
;;;246    #else
;;;247    do_memp_malloc_pool_fn(const struct memp_desc *desc, const char *file, const int line)
;;;248    #endif
;;;249    {
;;;250      struct memp *memp;
;;;251      SYS_ARCH_DECL_PROTECT(old_level);
;;;252    
;;;253    #if MEMP_MEM_MALLOC
;;;254      memp = (struct memp *)mem_malloc(MEMP_SIZE + MEMP_ALIGN_SIZE(desc->size));
;;;255      SYS_ARCH_PROTECT(old_level);
;;;256    #else /* MEMP_MEM_MALLOC */
;;;257      SYS_ARCH_PROTECT(old_level);
;;;258    
;;;259      memp = *desc->tab;
000002  6880              LDR      r0,[r0,#8]
000004  6804              LDR      r4,[r0,#0]
;;;260    #endif /* MEMP_MEM_MALLOC */
;;;261    
;;;262      if (memp != NULL) {
000006  2c00              CMP      r4,#0
000008  d00c              BEQ      |L2.36|
;;;263    #if !MEMP_MEM_MALLOC
;;;264    #if MEMP_OVERFLOW_CHECK == 1
;;;265        memp_overflow_check_element(memp, desc);
;;;266    #endif /* MEMP_OVERFLOW_CHECK */
;;;267    
;;;268        *desc->tab = memp->next;
00000a  6821              LDR      r1,[r4,#0]
00000c  6001              STR      r1,[r0,#0]
;;;269    #if MEMP_OVERFLOW_CHECK
;;;270        memp->next = NULL;
;;;271    #endif /* MEMP_OVERFLOW_CHECK */
;;;272    #endif /* !MEMP_MEM_MALLOC */
;;;273    #if MEMP_OVERFLOW_CHECK
;;;274        memp->file = file;
;;;275        memp->line = line;
;;;276    #if MEMP_MEM_MALLOC
;;;277        memp_overflow_init_element(memp, desc);
;;;278    #endif /* MEMP_MEM_MALLOC */
;;;279    #endif /* MEMP_OVERFLOW_CHECK */
;;;280        LWIP_ASSERT("memp_malloc: memp properly aligned",
00000e  07a0              LSLS     r0,r4,#30
000010  d006              BEQ      |L2.32|
000012  a305              ADR      r3,|L2.40|
000014  f44f728c          MOV      r2,#0x118
000018  a10f              ADR      r1,|L2.88|
00001a  a018              ADR      r0,|L2.124|
00001c  f7fffffe          BL       __2printf
                  |L2.32|
;;;281                    ((mem_ptr_t)memp % MEM_ALIGNMENT) == 0);
;;;282    #if MEMP_STATS
;;;283        desc->stats->used++;
;;;284        if (desc->stats->used > desc->stats->max) {
;;;285          desc->stats->max = desc->stats->used;
;;;286        }
;;;287    #endif
;;;288        SYS_ARCH_UNPROTECT(old_level);
;;;289        /* cast through u8_t* to get rid of alignment warnings */
;;;290        return ((u8_t *)memp + MEMP_SIZE);
000020  4620              MOV      r0,r4
;;;291      } else {
;;;292    #if MEMP_STATS
;;;293        desc->stats->err++;
;;;294    #endif
;;;295        SYS_ARCH_UNPROTECT(old_level);
;;;296        LWIP_DEBUGF(MEMP_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("memp_malloc: out of memory in pool %s\n", desc->desc));
;;;297      }
;;;298    
;;;299      return NULL;
;;;300    }
000022  bd10              POP      {r4,pc}
                  |L2.36|
000024  2000              MOVS     r0,#0                 ;299
000026  bd10              POP      {r4,pc}
;;;301    
                          ENDP

                  |L2.40|
000028  2e2e5c4d          DCB      "..\\Middlewares\\Third_Party\\LwIP\\src\\core\\memp.c",0
00002c  6964646c
000030  65776172
000034  65735c54
000038  68697264
00003c  5f506172
000040  74795c4c
000044  7749505c
000048  7372635c
00004c  636f7265
000050  5c6d656d
000054  702e6300
                  |L2.88|
000058  6d656d70          DCB      "memp_malloc: memp properly aligned",0
00005c  5f6d616c
000060  6c6f633a
000064  206d656d
000068  70207072
00006c  6f706572
000070  6c792061
000074  6c69676e
000078  656400  
00007b  00                DCB      0
                  |L2.124|
00007c  41737365          DCB      "Assertion ""%s"" failed at line %d in %s\n",0
000080  7274696f
000084  6e202225
000088  73222066
00008c  61696c65
000090  64206174
000094  206c696e
000098  65202564
00009c  20696e20
0000a0  25730a00

                          AREA ||i.memp_free||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  memp_free PROC
;;;419    void
;;;420    memp_free(memp_t type, void *mem)
000000  2809              CMP      r0,#9
;;;421    {
000002  d306              BCC      |L3.18|
;;;422    #ifdef LWIP_HOOK_MEMP_AVAILABLE
;;;423      struct memp *old_first;
;;;424    #endif
;;;425    
;;;426      LWIP_ERROR("memp_free: type < MEMP_MAX", (type < MEMP_MAX), return;);
000004  a307              ADR      r3,|L3.36|
000006  f44f72d5          MOV      r2,#0x1aa
00000a  a112              ADR      r1,|L3.84|
00000c  a018              ADR      r0,|L3.112|
00000e  f7ffbffe          B.W      __2printf
                  |L3.18|
;;;427    
;;;428      if (mem == NULL) {
000012  2900              CMP      r1,#0
000014  d004              BEQ      |L3.32|
;;;429        return;
;;;430      }
;;;431    
;;;432    #if MEMP_OVERFLOW_CHECK >= 2
;;;433      memp_overflow_check_all();
;;;434    #endif /* MEMP_OVERFLOW_CHECK >= 2 */
;;;435    
;;;436    #ifdef LWIP_HOOK_MEMP_AVAILABLE
;;;437      old_first = *memp_pools[type]->tab;
;;;438    #endif
;;;439    
;;;440      do_memp_free_pool(memp_pools[type], mem);
000016  4a20              LDR      r2,|L3.152|
000018  f8520020          LDR      r0,[r2,r0,LSL #2]
00001c  f7ffbffe          B.W      do_memp_free_pool
                  |L3.32|
;;;441    
;;;442    #ifdef LWIP_HOOK_MEMP_AVAILABLE
;;;443      if (old_first == NULL) {
;;;444        LWIP_HOOK_MEMP_AVAILABLE(type);
;;;445      }
;;;446    #endif
;;;447    }
000020  4770              BX       lr
                          ENDP

000022  0000              DCW      0x0000
                  |L3.36|
000024  2e2e5c4d          DCB      "..\\Middlewares\\Third_Party\\LwIP\\src\\core\\memp.c",0
000028  6964646c
00002c  65776172
000030  65735c54
000034  68697264
000038  5f506172
00003c  74795c4c
000040  7749505c
000044  7372635c
000048  636f7265
00004c  5c6d656d
000050  702e6300
                  |L3.84|
000054  6d656d70          DCB      "memp_free: type < MEMP_MAX",0
000058  5f667265
00005c  653a2074
000060  79706520
000064  3c204d45
000068  4d505f4d
00006c  415800  
00006f  00                DCB      0
                  |L3.112|
000070  41737365          DCB      "Assertion ""%s"" failed at line %d in %s\n",0
000074  7274696f
000078  6e202225
00007c  73222066
000080  61696c65
000084  64206174
000088  206c696e
00008c  65202564
000090  20696e20
000094  25730a00
                  |L3.152|
                          DCD      ||area_number.29||

                          AREA ||i.memp_free_pool||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  memp_free_pool PROC
;;;402    void
;;;403    memp_free_pool(const struct memp_desc *desc, void *mem)
000000  b570              PUSH     {r4-r6,lr}
;;;404    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;405      LWIP_ASSERT("invalid pool desc", desc != NULL);
000006  2c00              CMP      r4,#0
000008  d106              BNE      |L4.24|
00000a  a309              ADR      r3,|L4.48|
00000c  f2401295          MOV      r2,#0x195
000010  a113              ADR      r1,|L4.96|
000012  a018              ADR      r0,|L4.116|
000014  f7fffffe          BL       __2printf
                  |L4.24|
;;;406      if ((desc == NULL) || (mem == NULL)) {
000018  2c00              CMP      r4,#0
00001a  d007              BEQ      |L4.44|
00001c  2d00              CMP      r5,#0
00001e  d005              BEQ      |L4.44|
;;;407        return;
;;;408      }
;;;409    
;;;410      do_memp_free_pool(desc, mem);
000020  4629              MOV      r1,r5
000022  4620              MOV      r0,r4
000024  e8bd4070          POP      {r4-r6,lr}
000028  f7ffbffe          B.W      do_memp_free_pool
                  |L4.44|
;;;411    }
00002c  bd70              POP      {r4-r6,pc}
;;;412    
                          ENDP

00002e  0000              DCW      0x0000
                  |L4.48|
000030  2e2e5c4d          DCB      "..\\Middlewares\\Third_Party\\LwIP\\src\\core\\memp.c",0
000034  6964646c
000038  65776172
00003c  65735c54
000040  68697264
000044  5f506172
000048  74795c4c
00004c  7749505c
000050  7372635c
000054  636f7265
000058  5c6d656d
00005c  702e6300
                  |L4.96|
000060  696e7661          DCB      "invalid pool desc",0
000064  6c696420
000068  706f6f6c
00006c  20646573
000070  6300    
000072  00                DCB      0
000073  00                DCB      0
                  |L4.116|
000074  41737365          DCB      "Assertion ""%s"" failed at line %d in %s\n",0
000078  7274696f
00007c  6e202225
000080  73222066
000084  61696c65
000088  64206174
00008c  206c696e
000090  65202564
000094  20696e20
000098  25730a00

                          AREA ||i.memp_init||, CODE, READONLY, ALIGN=2

                  memp_init PROC
;;;223    void
;;;224    memp_init(void)
000000  b530              PUSH     {r4,r5,lr}
;;;225    {
;;;226      u16_t i;
;;;227    
;;;228      /* for every pool: */
;;;229      for (i = 0; i < LWIP_ARRAYSIZE(memp_pools); i++) {
000002  2400              MOVS     r4,#0
;;;230        memp_init_pool(memp_pools[i]);
000004  4d04              LDR      r5,|L5.24|
                  |L5.6|
000006  f8550024          LDR      r0,[r5,r4,LSL #2]
00000a  f7fffffe          BL       memp_init_pool
00000e  1c64              ADDS     r4,r4,#1              ;229
000010  b2a4              UXTH     r4,r4                 ;229
000012  2c09              CMP      r4,#9                 ;229
000014  d3f7              BCC      |L5.6|
;;;231    
;;;232    #if LWIP_STATS && MEMP_STATS
;;;233        lwip_stats.memp[i] = memp_pools[i]->stats;
;;;234    #endif
;;;235      }
;;;236    
;;;237    #if MEMP_OVERFLOW_CHECK >= 2
;;;238      /* check everything a first time to see if it worked */
;;;239      memp_overflow_check_all();
;;;240    #endif /* MEMP_OVERFLOW_CHECK >= 2 */
;;;241    }
000016  bd30              POP      {r4,r5,pc}
;;;242    
                          ENDP

                  |L5.24|
                          DCD      ||area_number.29||

                          AREA ||i.memp_init_pool||, CODE, READONLY, ALIGN=1

                  memp_init_pool PROC
;;;174    void
;;;175    memp_init_pool(const struct memp_desc *desc)
000000  6882              LDR      r2,[r0,#8]
;;;176    {
;;;177    #if MEMP_MEM_MALLOC
;;;178      LWIP_UNUSED_ARG(desc);
;;;179    #else
;;;180      int i;
;;;181      struct memp *memp;
;;;182    
;;;183      *desc->tab = NULL;
000002  2100              MOVS     r1,#0
000004  6011              STR      r1,[r2,#0]
;;;184      memp = (struct memp *)LWIP_MEM_ALIGN(desc->base);
000006  6841              LDR      r1,[r0,#4]
000008  1cc9              ADDS     r1,r1,#3
00000a  f0210103          BIC      r1,r1,#3
;;;185    #if MEMP_MEM_INIT
;;;186      /* force memset on pool memory */
;;;187      memset(memp, 0, (size_t)desc->num * (MEMP_SIZE + desc->size
;;;188    #if MEMP_OVERFLOW_CHECK
;;;189                                           + MEM_SANITY_REGION_AFTER_ALIGNED
;;;190    #endif
;;;191                                          ));
;;;192    #endif
;;;193      /* create a linked list of memp elements */
;;;194      for (i = 0; i < desc->num; ++i) {
00000e  2200              MOVS     r2,#0
000010  e007              B        |L6.34|
                  |L6.18|
;;;195        memp->next = *desc->tab;
000012  6883              LDR      r3,[r0,#8]
000014  681b              LDR      r3,[r3,#0]
000016  600b              STR      r3,[r1,#0]
;;;196        *desc->tab = memp;
000018  6883              LDR      r3,[r0,#8]
00001a  6019              STR      r1,[r3,#0]
;;;197    #if MEMP_OVERFLOW_CHECK
;;;198        memp_overflow_init_element(memp, desc);
;;;199    #endif /* MEMP_OVERFLOW_CHECK */
;;;200        /* cast through void* to get rid of alignment warnings */
;;;201        memp = (struct memp *)(void *)((u8_t *)memp + MEMP_SIZE + desc->size
00001c  8803              LDRH     r3,[r0,#0]
00001e  4419              ADD      r1,r1,r3
000020  1c52              ADDS     r2,r2,#1              ;194
                  |L6.34|
000022  8843              LDRH     r3,[r0,#2]            ;194
000024  4293              CMP      r3,r2                 ;194
000026  dcf4              BGT      |L6.18|
;;;202    #if MEMP_OVERFLOW_CHECK
;;;203                                       + MEM_SANITY_REGION_AFTER_ALIGNED
;;;204    #endif
;;;205                                      );
;;;206      }
;;;207    #if MEMP_STATS
;;;208      desc->stats->avail = desc->num;
;;;209    #endif /* MEMP_STATS */
;;;210    #endif /* !MEMP_MEM_MALLOC */
;;;211    
;;;212    #if MEMP_STATS && (defined(LWIP_DEBUG) || LWIP_STATS_DISPLAY)
;;;213      desc->stats->name  = desc->desc;
;;;214    #endif /* MEMP_STATS && (defined(LWIP_DEBUG) || LWIP_STATS_DISPLAY) */
;;;215    }
000028  4770              BX       lr
;;;216    
                          ENDP


                          AREA ||i.memp_malloc||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  memp_malloc PROC
;;;336    #if !MEMP_OVERFLOW_CHECK
;;;337    memp_malloc(memp_t type)
000000  b510              PUSH     {r4,lr}
;;;338    #else
;;;339    memp_malloc_fn(memp_t type, const char *file, const int line)
;;;340    #endif
;;;341    {
;;;342      void *memp;
;;;343      LWIP_ERROR("memp_malloc: type < MEMP_MAX", (type < MEMP_MAX), return NULL;);
000002  2809              CMP      r0,#9
000004  d308              BCC      |L7.24|
000006  a308              ADR      r3,|L7.40|
000008  f2401257          MOV      r2,#0x157
00000c  a112              ADR      r1,|L7.88|
00000e  a01a              ADR      r0,|L7.120|
000010  f7fffffe          BL       __2printf
000014  2000              MOVS     r0,#0
;;;344    
;;;345    #if MEMP_OVERFLOW_CHECK >= 2
;;;346      memp_overflow_check_all();
;;;347    #endif /* MEMP_OVERFLOW_CHECK >= 2 */
;;;348    
;;;349    #if !MEMP_OVERFLOW_CHECK
;;;350      memp = do_memp_malloc_pool(memp_pools[type]);
;;;351    #else
;;;352      memp = do_memp_malloc_pool_fn(memp_pools[type], file, line);
;;;353    #endif
;;;354    
;;;355      return memp;
;;;356    }
000016  bd10              POP      {r4,pc}
                  |L7.24|
000018  4921              LDR      r1,|L7.160|
00001a  f8510020          LDR      r0,[r1,r0,LSL #2]     ;350
00001e  e8bd4010          POP      {r4,lr}               ;350
000022  f7ffbffe          B.W      do_memp_malloc_pool
;;;357    
                          ENDP

000026  0000              DCW      0x0000
                  |L7.40|
000028  2e2e5c4d          DCB      "..\\Middlewares\\Third_Party\\LwIP\\src\\core\\memp.c",0
00002c  6964646c
000030  65776172
000034  65735c54
000038  68697264
00003c  5f506172
000040  74795c4c
000044  7749505c
000048  7372635c
00004c  636f7265
000050  5c6d656d
000054  702e6300
                  |L7.88|
000058  6d656d70          DCB      "memp_malloc: type < MEMP_MAX",0
00005c  5f6d616c
000060  6c6f633a
000064  20747970
000068  65203c20
00006c  4d454d50
000070  5f4d4158
000074  00      
000075  00                DCB      0
000076  00                DCB      0
000077  00                DCB      0
                  |L7.120|
000078  41737365          DCB      "Assertion ""%s"" failed at line %d in %s\n",0
00007c  7274696f
000080  6e202225
000084  73222066
000088  61696c65
00008c  64206174
000090  206c696e
000094  65202564
000098  20696e20
00009c  25730a00
                  |L7.160|
                          DCD      ||area_number.29||

                          AREA ||i.memp_malloc_pool||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  memp_malloc_pool PROC
;;;310    #if !MEMP_OVERFLOW_CHECK
;;;311    memp_malloc_pool(const struct memp_desc *desc)
000000  b510              PUSH     {r4,lr}
;;;312    #else
;;;313    memp_malloc_pool_fn(const struct memp_desc *desc, const char *file, const int line)
;;;314    #endif
;;;315    {
000002  4604              MOV      r4,r0
;;;316      LWIP_ASSERT("invalid pool desc", desc != NULL);
000004  2c00              CMP      r4,#0
000006  d106              BNE      |L8.22|
000008  a307              ADR      r3,|L8.40|
00000a  f44f729e          MOV      r2,#0x13c
00000e  a112              ADR      r1,|L8.88|
000010  a016              ADR      r0,|L8.108|
000012  f7fffffe          BL       __2printf
                  |L8.22|
;;;317      if (desc == NULL) {
000016  b124              CBZ      r4,|L8.34|
;;;318        return NULL;
;;;319      }
;;;320    
;;;321    #if !MEMP_OVERFLOW_CHECK
;;;322      return do_memp_malloc_pool(desc);
000018  4620              MOV      r0,r4
00001a  e8bd4010          POP      {r4,lr}
00001e  f7ffbffe          B.W      do_memp_malloc_pool
                  |L8.34|
000022  2000              MOVS     r0,#0                 ;318
;;;323    #else
;;;324      return do_memp_malloc_pool_fn(desc, file, line);
;;;325    #endif
;;;326    }
000024  bd10              POP      {r4,pc}
;;;327    
                          ENDP

000026  0000              DCW      0x0000
                  |L8.40|
000028  2e2e5c4d          DCB      "..\\Middlewares\\Third_Party\\LwIP\\src\\core\\memp.c",0
00002c  6964646c
000030  65776172
000034  65735c54
000038  68697264
00003c  5f506172
000040  74795c4c
000044  7749505c
000048  7372635c
00004c  636f7265
000050  5c6d656d
000054  702e6300
                  |L8.88|
000058  696e7661          DCB      "invalid pool desc",0
00005c  6c696420
000060  706f6f6c
000064  20646573
000068  6300    
00006a  00                DCB      0
00006b  00                DCB      0
                  |L8.108|
00006c  41737365          DCB      "Assertion ""%s"" failed at line %d in %s\n",0
000070  7274696f
000074  6e202225
000078  73222066
00007c  61696c65
000080  64206174
000084  206c696e
000088  65202564
00008c  20696e20
000090  25730a00

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  memp_memory_UDP_PCB_base
                          %        131

                          AREA ||area_number.11||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.11||, ||.bss||
                  memp_memory_TCP_PCB_base
                          %        783

                          AREA ||area_number.12||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.12||, ||.bss||
                  memp_memory_TCP_PCB_LISTEN_base
                          %        227

                          AREA ||area_number.13||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.13||, ||.bss||
                  memp_memory_TCP_SEG_base
                          %        259

                          AREA ||area_number.14||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.14||, ||.bss||
                  memp_memory_REASSDATA_base
                          %        163

                          AREA ||area_number.15||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.15||, ||.bss||
                  memp_memory_FRAG_PBUF_base
                          %        363

                          AREA ||area_number.16||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.16||, ||.bss||
                  memp_memory_SYS_TIMEOUT_base
                          %        99

                          AREA ||area_number.17||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.17||, ||.bss||
                  memp_memory_PBUF_base
                          %        259

                          AREA ||area_number.18||, DATA, NOINIT, ALIGN=0

                          EXPORTAS ||area_number.18||, ||.bss||
                  memp_memory_PBUF_POOL_base
                          %        9731

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  memp_UDP_PCB
000000  00200004          DCW      0x0020,0x0004
                          DCD      memp_memory_UDP_PCB_base
                          DCD      memp_tab_UDP_PCB

                          AREA ||area_number.21||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.21||, ||.constdata||
                  memp_TCP_PCB
000000  009c0005          DCW      0x009c,0x0005
                          DCD      memp_memory_TCP_PCB_base
                          DCD      memp_tab_TCP_PCB

                          AREA ||area_number.22||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.22||, ||.constdata||
                  memp_TCP_PCB_LISTEN
000000  001c0008          DCW      0x001c,0x0008
                          DCD      memp_memory_TCP_PCB_LISTEN_base
                          DCD      memp_tab_TCP_PCB_LISTEN

                          AREA ||area_number.23||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.23||, ||.constdata||
                  memp_TCP_SEG
000000  00100010          DCW      0x0010,0x0010
                          DCD      memp_memory_TCP_SEG_base
                          DCD      memp_tab_TCP_SEG

                          AREA ||area_number.24||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.24||, ||.constdata||
                  memp_REASSDATA
000000  00200005          DCW      0x0020,0x0005
                          DCD      memp_memory_REASSDATA_base
                          DCD      memp_tab_REASSDATA

                          AREA ||area_number.25||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.25||, ||.constdata||
                  memp_FRAG_PBUF
000000  0018000f          DCW      0x0018,0x000f
                          DCD      memp_memory_FRAG_PBUF_base
                          DCD      memp_tab_FRAG_PBUF

                          AREA ||area_number.26||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.26||, ||.constdata||
                  memp_SYS_TIMEOUT
000000  00100006          DCW      0x0010,0x0006
                          DCD      memp_memory_SYS_TIMEOUT_base
                          DCD      memp_tab_SYS_TIMEOUT

                          AREA ||area_number.27||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.27||, ||.constdata||
                  memp_PBUF
000000  00100010          DCW      0x0010,0x0010
                          DCD      memp_memory_PBUF_base
                          DCD      memp_tab_PBUF

                          AREA ||area_number.28||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.28||, ||.constdata||
                  memp_PBUF_POOL
000000  02600010          DCW      0x0260,0x0010
                          DCD      memp_memory_PBUF_POOL_base
                          DCD      memp_tab_PBUF_POOL

                          AREA ||area_number.29||, DATA, READONLY, ALIGN=2

                          EXPORTAS ||area_number.29||, ||.constdata||
                  memp_pools
                          DCD      memp_UDP_PCB
                          DCD      memp_TCP_PCB
                          DCD      memp_TCP_PCB_LISTEN
                          DCD      memp_TCP_SEG
                          DCD      memp_REASSDATA
                          DCD      memp_FRAG_PBUF
                          DCD      memp_SYS_TIMEOUT
                          DCD      memp_PBUF
                          DCD      memp_PBUF_POOL

                          AREA ||.data||, DATA, ALIGN=2

                  memp_tab_UDP_PCB
                          DCD      0x00000000

                          AREA ||area_number.31||, DATA, ALIGN=2

                          EXPORTAS ||area_number.31||, ||.data||
                  memp_tab_TCP_PCB
                          DCD      0x00000000

                          AREA ||area_number.32||, DATA, ALIGN=2

                          EXPORTAS ||area_number.32||, ||.data||
                  memp_tab_TCP_PCB_LISTEN
                          DCD      0x00000000

                          AREA ||area_number.33||, DATA, ALIGN=2

                          EXPORTAS ||area_number.33||, ||.data||
                  memp_tab_TCP_SEG
                          DCD      0x00000000

                          AREA ||area_number.34||, DATA, ALIGN=2

                          EXPORTAS ||area_number.34||, ||.data||
                  memp_tab_REASSDATA
                          DCD      0x00000000

                          AREA ||area_number.35||, DATA, ALIGN=2

                          EXPORTAS ||area_number.35||, ||.data||
                  memp_tab_FRAG_PBUF
                          DCD      0x00000000

                          AREA ||area_number.36||, DATA, ALIGN=2

                          EXPORTAS ||area_number.36||, ||.data||
                  memp_tab_SYS_TIMEOUT
                          DCD      0x00000000

                          AREA ||area_number.37||, DATA, ALIGN=2

                          EXPORTAS ||area_number.37||, ||.data||
                  memp_tab_PBUF
                          DCD      0x00000000

                          AREA ||area_number.38||, DATA, ALIGN=2

                          EXPORTAS ||area_number.38||, ||.data||
                  memp_tab_PBUF_POOL
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\Middlewares\\Third_Party\\LwIP\\src\\core\\memp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_memp_c_d5747013____REV16|
#line 463 "..\\Drivers\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___6_memp_c_d5747013____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_memp_c_d5747013____REVSH|
#line 478
|__asm___6_memp_c_d5747013____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_memp_c_d5747013____RRX|
#line 665
|__asm___6_memp_c_d5747013____RRX| PROC
#line 666

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
