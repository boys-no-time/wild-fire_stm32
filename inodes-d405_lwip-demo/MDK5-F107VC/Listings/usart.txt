; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\usart.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\usart.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931 -I..\Inc -I..\Drivers\STM32F1xx_HAL_Driver\Inc\Legacy -I..\Drivers\STM32F1xx_HAL_Driver\Inc -I..\Drivers\CMSIS\Device -I..\Drivers\CMSIS\Include -I..\Middlewares\Third_Party\LwIP\src\include -I..\Middlewares\Third_Party\LwIP\system -I..\Middlewares\Third_Party\LwIP\src\include\netif\ppp -I..\Middlewares\Third_Party\LwIP\src\include\lwip -I..\Middlewares\Third_Party\LwIP\src\include\lwip\apps -I..\Middlewares\Third_Party\LwIP\src\include\lwip\priv -I..\Middlewares\Third_Party\LwIP\src\include\lwip\prot -I..\Middlewares\Third_Party\LwIP\src\include\netif -I..\Middlewares\Third_Party\LwIP\src\include\posix -I..\Middlewares\Third_Party\LwIP\src\include\posix\sys -I..\Middlewares\Third_Party\LwIP\system\arch -I..\App -I..\Middlewares\Third_Party\LwIP\system -I.\RTE\_f107vc -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=530 -DSTM32F10X_CL -D_RTE_ -DUSE_HAL_DRIVER -DSTM32F107xC --omf_browse=.\objects\usart.crf ..\Src\usart.c]
                          THUMB

                          AREA ||i.HAL_UART_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_UART_MspDeInit PROC
;;;192    
;;;193    void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
000000  b510              PUSH     {r4,lr}
;;;194    {
;;;195    
;;;196      if(uartHandle->Instance==UART4)
000002  6800              LDR      r0,[r0,#0]
000004  4a18              LDR      r2,|L1.104|
;;;197      {
;;;198      /* USER CODE BEGIN UART4_MspDeInit 0 */
;;;199    
;;;200      /* USER CODE END UART4_MspDeInit 0 */
;;;201        /* Peripheral clock disable */
;;;202        __HAL_RCC_UART4_CLK_DISABLE();
000006  4919              LDR      r1,|L1.108|
000008  4290              CMP      r0,r2                 ;196
00000a  d10d              BNE      |L1.40|
00000c  69c8              LDR      r0,[r1,#0x1c]
00000e  f4202000          BIC      r0,r0,#0x80000
000012  61c8              STR      r0,[r1,#0x1c]
;;;203    
;;;204        /**UART4 GPIO Configuration
;;;205        PC10     ------> UART4_TX
;;;206        PC11     ------> UART4_RX
;;;207        */
;;;208        HAL_GPIO_DeInit(GPIOC, GPIO_PIN_10|GPIO_PIN_11);
000014  f44f6140          MOV      r1,#0xc00
000018  4815              LDR      r0,|L1.112|
00001a  f7fffffe          BL       HAL_GPIO_DeInit
;;;209    
;;;210        /* UART4 interrupt Deinit */
;;;211        HAL_NVIC_DisableIRQ(UART4_IRQn);
00001e  e8bd4010          POP      {r4,lr}
000022  2034              MOVS     r0,#0x34
000024  f7ffbffe          B.W      HAL_NVIC_DisableIRQ
                  |L1.40|
;;;212      /* USER CODE BEGIN UART4_MspDeInit 1 */
;;;213    
;;;214      /* USER CODE END UART4_MspDeInit 1 */
;;;215      }
;;;216      else if(uartHandle->Instance==USART1)
000028  4a12              LDR      r2,|L1.116|
00002a  4290              CMP      r0,r2
00002c  d10d              BNE      |L1.74|
;;;217      {
;;;218      /* USER CODE BEGIN USART1_MspDeInit 0 */
;;;219    
;;;220      /* USER CODE END USART1_MspDeInit 0 */
;;;221        /* Peripheral clock disable */
;;;222        __HAL_RCC_USART1_CLK_DISABLE();
00002e  6988              LDR      r0,[r1,#0x18]
000030  f4204080          BIC      r0,r0,#0x4000
000034  6188              STR      r0,[r1,#0x18]
;;;223    
;;;224        /**USART1 GPIO Configuration
;;;225        PA9     ------> USART1_TX
;;;226        PA10     ------> USART1_RX
;;;227        */
;;;228        HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
000036  f44f61c0          MOV      r1,#0x600
00003a  480f              LDR      r0,|L1.120|
00003c  f7fffffe          BL       HAL_GPIO_DeInit
;;;229    
;;;230        /* USART1 interrupt Deinit */
;;;231        HAL_NVIC_DisableIRQ(USART1_IRQn);
000040  e8bd4010          POP      {r4,lr}
000044  2025              MOVS     r0,#0x25
000046  f7ffbffe          B.W      HAL_NVIC_DisableIRQ
                  |L1.74|
;;;232      /* USER CODE BEGIN USART1_MspDeInit 1 */
;;;233    
;;;234      /* USER CODE END USART1_MspDeInit 1 */
;;;235      }
;;;236      else if(uartHandle->Instance==USART2)
00004a  4a0c              LDR      r2,|L1.124|
00004c  4290              CMP      r0,r2
00004e  d109              BNE      |L1.100|
;;;237      {
;;;238      /* USER CODE BEGIN USART2_MspDeInit 0 */
;;;239    
;;;240      /* USER CODE END USART2_MspDeInit 0 */
;;;241        /* Peripheral clock disable */
;;;242        __HAL_RCC_USART2_CLK_DISABLE();
000050  69c8              LDR      r0,[r1,#0x1c]
000052  f4203000          BIC      r0,r0,#0x20000
000056  61c8              STR      r0,[r1,#0x1c]
;;;243    
;;;244        /**USART2 GPIO Configuration
;;;245        PD5     ------> USART2_TX
;;;246        PD6     ------> USART2_RX
;;;247        */
;;;248        HAL_GPIO_DeInit(GPIOD, GPIO_PIN_5|GPIO_PIN_6);
000058  e8bd4010          POP      {r4,lr}
00005c  2160              MOVS     r1,#0x60
00005e  4808              LDR      r0,|L1.128|
000060  f7ffbffe          B.W      HAL_GPIO_DeInit
                  |L1.100|
;;;249    
;;;250      /* USER CODE BEGIN USART2_MspDeInit 1 */
;;;251    
;;;252      /* USER CODE END USART2_MspDeInit 1 */
;;;253      }
;;;254    }
000064  bd10              POP      {r4,pc}
;;;255    
                          ENDP

000066  0000              DCW      0x0000
                  |L1.104|
                          DCD      0x40004c00
                  |L1.108|
                          DCD      0x40021000
                  |L1.112|
                          DCD      0x40011000
                  |L1.116|
                          DCD      0x40013800
                  |L1.120|
                          DCD      0x40010800
                  |L1.124|
                          DCD      0x40004400
                  |L1.128|
                          DCD      0x40011400

                          AREA ||i.HAL_UART_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_UART_MspInit PROC
;;;97     
;;;98     void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
000000  b570              PUSH     {r4-r6,lr}
;;;99     {
000002  b086              SUB      sp,sp,#0x18
;;;100    
;;;101      GPIO_InitTypeDef GPIO_InitStruct = {0};
000004  2400              MOVS     r4,#0
000006  9402              STR      r4,[sp,#8]
000008  9403              STR      r4,[sp,#0xc]
00000a  9404              STR      r4,[sp,#0x10]
00000c  9405              STR      r4,[sp,#0x14]
;;;102      if(uartHandle->Instance==UART4)
;;;103      {
;;;104      /* USER CODE BEGIN UART4_MspInit 0 */
;;;105    
;;;106      /* USER CODE END UART4_MspInit 0 */
;;;107        /* UART4 clock enable */
;;;108        __HAL_RCC_UART4_CLK_ENABLE();
00000e  6801              LDR      r1,[r0,#0]
000010  4845              LDR      r0,|L2.296|
000012  4e44              LDR      r6,|L2.292|
;;;109    
;;;110        __HAL_RCC_GPIOC_CLK_ENABLE();
;;;111        /**UART4 GPIO Configuration
;;;112        PC10     ------> UART4_TX
;;;113        PC11     ------> UART4_RX
;;;114        */
;;;115        GPIO_InitStruct.Pin = GPIO_PIN_10;
000014  1505              ASRS     r5,r0,#20
;;;116        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
000016  2202              MOVS     r2,#2
;;;117        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
000018  2303              MOVS     r3,#3
00001a  42b1              CMP      r1,r6                 ;102
00001c  d129              BNE      |L2.114|
00001e  69c1              LDR      r1,[r0,#0x1c]         ;108
000020  f4412100          ORR      r1,r1,#0x80000        ;108
000024  61c1              STR      r1,[r0,#0x1c]         ;108
000026  69c1              LDR      r1,[r0,#0x1c]         ;108
000028  f4012100          AND      r1,r1,#0x80000        ;108
00002c  9101              STR      r1,[sp,#4]            ;108
00002e  6981              LDR      r1,[r0,#0x18]         ;110
000030  f0410110          ORR      r1,r1,#0x10           ;110
000034  6181              STR      r1,[r0,#0x18]         ;110
000036  6980              LDR      r0,[r0,#0x18]         ;110
000038  f0000010          AND      r0,r0,#0x10           ;110
00003c  9001              STR      r0,[sp,#4]            ;110
00003e  9502              STR      r5,[sp,#8]            ;115
000040  9203              STR      r2,[sp,#0xc]          ;116
000042  9305              STR      r3,[sp,#0x14]
;;;118        HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
000044  4d39              LDR      r5,|L2.300|
000046  a902              ADD      r1,sp,#8
000048  4628              MOV      r0,r5
00004a  f7fffffe          BL       HAL_GPIO_Init
;;;119    
;;;120        GPIO_InitStruct.Pin = GPIO_PIN_11;
00004e  14e9              ASRS     r1,r5,#19
000050  9102              STR      r1,[sp,#8]
;;;121        GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
000052  9403              STR      r4,[sp,#0xc]
;;;122        GPIO_InitStruct.Pull = GPIO_NOPULL;
000054  9404              STR      r4,[sp,#0x10]
;;;123        HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
000056  a902              ADD      r1,sp,#8
000058  4628              MOV      r0,r5
00005a  f7fffffe          BL       HAL_GPIO_Init
;;;124    
;;;125        /* UART4 interrupt Init */
;;;126        HAL_NVIC_SetPriority(UART4_IRQn, 0, 0);
00005e  2200              MOVS     r2,#0
000060  4611              MOV      r1,r2
000062  2034              MOVS     r0,#0x34
000064  f7fffffe          BL       HAL_NVIC_SetPriority
;;;127        HAL_NVIC_EnableIRQ(UART4_IRQn);
000068  2034              MOVS     r0,#0x34
00006a  f7fffffe          BL       HAL_NVIC_EnableIRQ
                  |L2.110|
;;;128      /* USER CODE BEGIN UART4_MspInit 1 */
;;;129    
;;;130      /* USER CODE END UART4_MspInit 1 */
;;;131      }
;;;132      else if(uartHandle->Instance==USART1)
;;;133      {
;;;134      /* USER CODE BEGIN USART1_MspInit 0 */
;;;135    
;;;136      /* USER CODE END USART1_MspInit 0 */
;;;137        /* USART1 clock enable */
;;;138        __HAL_RCC_USART1_CLK_ENABLE();
;;;139    
;;;140        __HAL_RCC_GPIOA_CLK_ENABLE();
;;;141        /**USART1 GPIO Configuration
;;;142        PA9     ------> USART1_TX
;;;143        PA10     ------> USART1_RX
;;;144        */
;;;145        GPIO_InitStruct.Pin = GPIO_PIN_9;
;;;146        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
;;;147        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
;;;148        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
;;;149    
;;;150        GPIO_InitStruct.Pin = GPIO_PIN_10;
;;;151        GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
;;;152        GPIO_InitStruct.Pull = GPIO_NOPULL;
;;;153        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
;;;154    
;;;155        /* USART1 interrupt Init */
;;;156        HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
;;;157        HAL_NVIC_EnableIRQ(USART1_IRQn);
;;;158      /* USER CODE BEGIN USART1_MspInit 1 */
;;;159    
;;;160      /* USER CODE END USART1_MspInit 1 */
;;;161      }
;;;162      else if(uartHandle->Instance==USART2)
;;;163      {
;;;164      /* USER CODE BEGIN USART2_MspInit 0 */
;;;165    
;;;166      /* USER CODE END USART2_MspInit 0 */
;;;167        /* USART2 clock enable */
;;;168        __HAL_RCC_USART2_CLK_ENABLE();
;;;169    
;;;170        __HAL_RCC_GPIOD_CLK_ENABLE();
;;;171        /**USART2 GPIO Configuration
;;;172        PD5     ------> USART2_TX
;;;173        PD6     ------> USART2_RX
;;;174        */
;;;175        GPIO_InitStruct.Pin = GPIO_PIN_5;
;;;176        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
;;;177        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
;;;178        HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
;;;179    
;;;180        GPIO_InitStruct.Pin = GPIO_PIN_6;
;;;181        GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
;;;182        GPIO_InitStruct.Pull = GPIO_NOPULL;
;;;183        HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
;;;184    
;;;185        __HAL_AFIO_REMAP_USART2_ENABLE();
;;;186    
;;;187      /* USER CODE BEGIN USART2_MspInit 1 */
;;;188    
;;;189      /* USER CODE END USART2_MspInit 1 */
;;;190      }
;;;191    }
00006e  b006              ADD      sp,sp,#0x18
000070  bd70              POP      {r4-r6,pc}
                  |L2.114|
000072  4e2f              LDR      r6,|L2.304|
000074  42b1              CMP      r1,r6                 ;132
000076  d128              BNE      |L2.202|
000078  6981              LDR      r1,[r0,#0x18]         ;138
00007a  f4414180          ORR      r1,r1,#0x4000         ;138
00007e  6181              STR      r1,[r0,#0x18]         ;138
000080  6981              LDR      r1,[r0,#0x18]         ;138
000082  f4014180          AND      r1,r1,#0x4000         ;138
000086  9101              STR      r1,[sp,#4]            ;138
000088  6981              LDR      r1,[r0,#0x18]         ;140
00008a  f0410104          ORR      r1,r1,#4              ;140
00008e  6181              STR      r1,[r0,#0x18]         ;140
000090  6980              LDR      r0,[r0,#0x18]         ;140
000092  f0000004          AND      r0,r0,#4              ;140
000096  9001              STR      r0,[sp,#4]            ;140
000098  1570              ASRS     r0,r6,#21             ;145
00009a  9002              STR      r0,[sp,#8]            ;145
00009c  9203              STR      r2,[sp,#0xc]          ;146
00009e  9305              STR      r3,[sp,#0x14]         ;147
0000a0  4e24              LDR      r6,|L2.308|
0000a2  a902              ADD      r1,sp,#8              ;148
0000a4  4630              MOV      r0,r6                 ;148
0000a6  f7fffffe          BL       HAL_GPIO_Init
0000aa  9502              STR      r5,[sp,#8]            ;150
0000ac  9403              STR      r4,[sp,#0xc]          ;151
0000ae  9404              STR      r4,[sp,#0x10]         ;152
0000b0  a902              ADD      r1,sp,#8              ;153
0000b2  4630              MOV      r0,r6                 ;153
0000b4  f7fffffe          BL       HAL_GPIO_Init
0000b8  2200              MOVS     r2,#0                 ;156
0000ba  4611              MOV      r1,r2                 ;156
0000bc  2025              MOVS     r0,#0x25              ;156
0000be  f7fffffe          BL       HAL_NVIC_SetPriority
0000c2  2025              MOVS     r0,#0x25              ;157
0000c4  f7fffffe          BL       HAL_NVIC_EnableIRQ
0000c8  e7d1              B        |L2.110|
                  |L2.202|
0000ca  4d1b              LDR      r5,|L2.312|
0000cc  42a9              CMP      r1,r5                 ;162
0000ce  d1ce              BNE      |L2.110|
0000d0  69c1              LDR      r1,[r0,#0x1c]         ;168
0000d2  f4413100          ORR      r1,r1,#0x20000        ;168
0000d6  61c1              STR      r1,[r0,#0x1c]         ;168
0000d8  69c1              LDR      r1,[r0,#0x1c]         ;168
0000da  f4013100          AND      r1,r1,#0x20000        ;168
0000de  9101              STR      r1,[sp,#4]            ;168
0000e0  6981              LDR      r1,[r0,#0x18]         ;170
0000e2  f0410120          ORR      r1,r1,#0x20           ;170
0000e6  6181              STR      r1,[r0,#0x18]         ;170
0000e8  6980              LDR      r0,[r0,#0x18]         ;170
0000ea  f0000020          AND      r0,r0,#0x20           ;170
0000ee  9001              STR      r0,[sp,#4]            ;170
0000f0  2020              MOVS     r0,#0x20              ;175
0000f2  9002              STR      r0,[sp,#8]            ;175
0000f4  9203              STR      r2,[sp,#0xc]          ;176
0000f6  9305              STR      r3,[sp,#0x14]         ;177
0000f8  4d10              LDR      r5,|L2.316|
0000fa  a902              ADD      r1,sp,#8              ;178
0000fc  4628              MOV      r0,r5                 ;178
0000fe  f7fffffe          BL       HAL_GPIO_Init
000102  2140              MOVS     r1,#0x40              ;180
000104  9102              STR      r1,[sp,#8]            ;180
000106  9403              STR      r4,[sp,#0xc]          ;181
000108  9404              STR      r4,[sp,#0x10]         ;182
00010a  a902              ADD      r1,sp,#8              ;183
00010c  4628              MOV      r0,r5                 ;183
00010e  f7fffffe          BL       HAL_GPIO_Init
000112  490b              LDR      r1,|L2.320|
000114  6848              LDR      r0,[r1,#4]            ;185
000116  f04060e0          ORR      r0,r0,#0x7000000      ;185
00011a  f0400008          ORR      r0,r0,#8              ;185
00011e  6048              STR      r0,[r1,#4]            ;185
000120  e7a5              B        |L2.110|
;;;192    
                          ENDP

000122  0000              DCW      0x0000
                  |L2.292|
                          DCD      0x40004c00
                  |L2.296|
                          DCD      0x40021000
                  |L2.300|
                          DCD      0x40011000
                  |L2.304|
                          DCD      0x40013800
                  |L2.308|
                          DCD      0x40010800
                  |L2.312|
                          DCD      0x40004400
                  |L2.316|
                          DCD      0x40011400
                  |L2.320|
                          DCD      0x40010000

                          AREA ||i.MX_UART4_Init||, CODE, READONLY, ALIGN=2

                  MX_UART4_Init PROC
;;;41     /* UART4 init function */
;;;42     void MX_UART4_Init(void)
000000  b510              PUSH     {r4,lr}
;;;43     {
;;;44     
;;;45       huart4.Instance = UART4;
000002  480c              LDR      r0,|L3.52|
000004  490a              LDR      r1,|L3.48|
000006  6001              STR      r1,[r0,#0]  ; huart4
;;;46       huart4.Init.BaudRate = 115200;
000008  f44f31e1          MOV      r1,#0x1c200
00000c  6041              STR      r1,[r0,#4]  ; huart4
;;;47       huart4.Init.WordLength = UART_WORDLENGTH_8B;
00000e  2100              MOVS     r1,#0
000010  6081              STR      r1,[r0,#8]  ; huart4
;;;48       huart4.Init.StopBits = UART_STOPBITS_1;
000012  60c1              STR      r1,[r0,#0xc]  ; huart4
;;;49       huart4.Init.Parity = UART_PARITY_NONE;
000014  6101              STR      r1,[r0,#0x10]  ; huart4
;;;50       huart4.Init.Mode = UART_MODE_TX_RX;
000016  220c              MOVS     r2,#0xc
000018  6142              STR      r2,[r0,#0x14]  ; huart4
;;;51       huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
00001a  6181              STR      r1,[r0,#0x18]  ; huart4
;;;52       huart4.Init.OverSampling = UART_OVERSAMPLING_16;
00001c  61c1              STR      r1,[r0,#0x1c]  ; huart4
;;;53       if (HAL_UART_Init(&huart4) != HAL_OK)
00001e  f7fffffe          BL       HAL_UART_Init
000022  2800              CMP      r0,#0
000024  d003              BEQ      |L3.46|
;;;54       {
;;;55         Error_Handler();
000026  e8bd4010          POP      {r4,lr}
00002a  f7ffbffe          B.W      Error_Handler
                  |L3.46|
;;;56       }
;;;57     
;;;58     }
00002e  bd10              POP      {r4,pc}
;;;59     /* USART1 init function */
                          ENDP

                  |L3.48|
                          DCD      0x40004c00
                  |L3.52|
                          DCD      ||.bss||

                          AREA ||i.MX_USART1_UART_Init||, CODE, READONLY, ALIGN=2

                  MX_USART1_UART_Init PROC
;;;60     
;;;61     void MX_USART1_UART_Init(void)
000000  b510              PUSH     {r4,lr}
;;;62     {
;;;63     
;;;64       huart1.Instance = USART1;
000002  480c              LDR      r0,|L4.52|
000004  490a              LDR      r1,|L4.48|
000006  6001              STR      r1,[r0,#0]  ; huart1
;;;65       huart1.Init.BaudRate = 115200;
000008  f44f31e1          MOV      r1,#0x1c200
00000c  6041              STR      r1,[r0,#4]  ; huart1
;;;66       huart1.Init.WordLength = UART_WORDLENGTH_8B;
00000e  2100              MOVS     r1,#0
000010  6081              STR      r1,[r0,#8]  ; huart1
;;;67       huart1.Init.StopBits = UART_STOPBITS_1;
000012  60c1              STR      r1,[r0,#0xc]  ; huart1
;;;68       huart1.Init.Parity = UART_PARITY_NONE;
000014  6101              STR      r1,[r0,#0x10]  ; huart1
;;;69       huart1.Init.Mode = UART_MODE_TX_RX;
000016  220c              MOVS     r2,#0xc
000018  6142              STR      r2,[r0,#0x14]  ; huart1
;;;70       huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
00001a  6181              STR      r1,[r0,#0x18]  ; huart1
;;;71       huart1.Init.OverSampling = UART_OVERSAMPLING_16;
00001c  61c1              STR      r1,[r0,#0x1c]  ; huart1
;;;72       if (HAL_UART_Init(&huart1) != HAL_OK)
00001e  f7fffffe          BL       HAL_UART_Init
000022  2800              CMP      r0,#0
000024  d003              BEQ      |L4.46|
;;;73       {
;;;74         Error_Handler();
000026  e8bd4010          POP      {r4,lr}
00002a  f7ffbffe          B.W      Error_Handler
                  |L4.46|
;;;75       }
;;;76     
;;;77     }
00002e  bd10              POP      {r4,pc}
;;;78     /* USART2 init function */
                          ENDP

                  |L4.48|
                          DCD      0x40013800
                  |L4.52|
                          DCD      ||.bss||+0x40

                          AREA ||i.MX_USART2_UART_Init||, CODE, READONLY, ALIGN=2

                  MX_USART2_UART_Init PROC
;;;79     
;;;80     void MX_USART2_UART_Init(void)
000000  b510              PUSH     {r4,lr}
;;;81     {
;;;82     
;;;83       huart2.Instance = USART2;
000002  480c              LDR      r0,|L5.52|
000004  490a              LDR      r1,|L5.48|
000006  6001              STR      r1,[r0,#0]  ; huart2
;;;84       huart2.Init.BaudRate = 115200;
000008  f44f31e1          MOV      r1,#0x1c200
00000c  6041              STR      r1,[r0,#4]  ; huart2
;;;85       huart2.Init.WordLength = UART_WORDLENGTH_8B;
00000e  2100              MOVS     r1,#0
000010  6081              STR      r1,[r0,#8]  ; huart2
;;;86       huart2.Init.StopBits = UART_STOPBITS_1;
000012  60c1              STR      r1,[r0,#0xc]  ; huart2
;;;87       huart2.Init.Parity = UART_PARITY_NONE;
000014  6101              STR      r1,[r0,#0x10]  ; huart2
;;;88       huart2.Init.Mode = UART_MODE_TX_RX;
000016  220c              MOVS     r2,#0xc
000018  6142              STR      r2,[r0,#0x14]  ; huart2
;;;89       huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
00001a  6181              STR      r1,[r0,#0x18]  ; huart2
;;;90       huart2.Init.OverSampling = UART_OVERSAMPLING_16;
00001c  61c1              STR      r1,[r0,#0x1c]  ; huart2
;;;91       if (HAL_UART_Init(&huart2) != HAL_OK)
00001e  f7fffffe          BL       HAL_UART_Init
000022  2800              CMP      r0,#0
000024  d003              BEQ      |L5.46|
;;;92       {
;;;93         Error_Handler();
000026  e8bd4010          POP      {r4,lr}
00002a  f7ffbffe          B.W      Error_Handler
                  |L5.46|
;;;94       }
;;;95     
;;;96     }
00002e  bd10              POP      {r4,pc}
;;;97     
                          ENDP

                  |L5.48|
                          DCD      0x40004400
                  |L5.52|
                          DCD      ||.bss||+0x80

                          AREA ||i.__io_putchar||, CODE, READONLY, ALIGN=2

                  __io_putchar PROC
;;;26     
;;;27     int __io_putchar(int ch)
000000  b501              PUSH     {r0,lr}
;;;28     {
;;;29     	//TODO: USART output here
;;;30         HAL_UART_Transmit(&huart4,(uint8_t *)&ch,1,1000);
000002  f44f737a          MOV      r3,#0x3e8
000006  2201              MOVS     r2,#1
000008  4669              MOV      r1,sp
00000a  4802              LDR      r0,|L6.20|
00000c  f7fffffe          BL       HAL_UART_Transmit
;;;31     
;;;32         return ch;
000010  9800              LDR      r0,[sp,#0]
;;;33     }
000012  bd08              POP      {r3,pc}
;;;34     #endif
                          ENDP

                  |L6.20|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  huart4
                          %        64
                  huart1
                          %        64
                  huart2
                          %        64

;*** Start embedded assembler ***

#line 1 "..\\Src\\usart.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_usart_c_ea3d2880____REV16|
#line 463 "..\\Drivers\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___7_usart_c_ea3d2880____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_usart_c_ea3d2880____REVSH|
#line 478
|__asm___7_usart_c_ea3d2880____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___7_usart_c_ea3d2880____RRX|
#line 665
|__asm___7_usart_c_ea3d2880____RRX| PROC
#line 666

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
