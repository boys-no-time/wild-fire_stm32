; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\main.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\main.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931 -I..\Inc -I..\Drivers\STM32F1xx_HAL_Driver\Inc\Legacy -I..\Drivers\STM32F1xx_HAL_Driver\Inc -I..\Drivers\CMSIS\Device -I..\Drivers\CMSIS\Include -I..\Middlewares\Third_Party\LwIP\src\include -I..\Middlewares\Third_Party\LwIP\system -I..\Middlewares\Third_Party\LwIP\src\include\netif\ppp -I..\Middlewares\Third_Party\LwIP\src\include\lwip -I..\Middlewares\Third_Party\LwIP\src\include\lwip\apps -I..\Middlewares\Third_Party\LwIP\src\include\lwip\priv -I..\Middlewares\Third_Party\LwIP\src\include\lwip\prot -I..\Middlewares\Third_Party\LwIP\src\include\netif -I..\Middlewares\Third_Party\LwIP\src\include\posix -I..\Middlewares\Third_Party\LwIP\src\include\posix\sys -I..\Middlewares\Third_Party\LwIP\system\arch -I..\App -I..\Middlewares\Third_Party\LwIP\system -I.\RTE\_f107vc -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=530 -DSTM32F10X_CL -D_RTE_ -DUSE_HAL_DRIVER -DSTM32F107xC --omf_browse=.\objects\main.crf ..\App\main.c]
                          THUMB

                          AREA ||i.Error_Handler||, CODE, READONLY, ALIGN=1

                  Error_Handler PROC
;;;118    
;;;119    void Error_Handler(void)
000000  4770              BX       lr
;;;120    {
;;;121      /* USER CODE BEGIN Error_Handler_Debug */
;;;122      /* User can add his own implementation to report the HAL error return state */
;;;123      /* USER CODE END Error_Handler_Debug */
;;;124    }
;;;125    
                          ENDP


                          AREA ||i.SystemClock_Config||, CODE, READONLY, ALIGN=2

                  SystemClock_Config PROC
;;;73       */
;;;74     void SystemClock_Config(void)
000000  b530              PUSH     {r4,r5,lr}
;;;75     {
000002  b093              SUB      sp,sp,#0x4c
;;;76       RCC_OscInitTypeDef RCC_OscInitStruct = {0};
000004  2138              MOVS     r1,#0x38
000006  a805              ADD      r0,sp,#0x14
000008  f7fffffe          BL       __aeabi_memclr4
;;;77       RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
00000c  2114              MOVS     r1,#0x14
00000e  4668              MOV      r0,sp
000010  f7fffffe          BL       __aeabi_memclr4
;;;78     
;;;79       /** Initializes the RCC Oscillators according to the specified parameters
;;;80       * in the RCC_OscInitTypeDef structure.
;;;81       */
;;;82       RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
000014  2501              MOVS     r5,#1
000016  9505              STR      r5,[sp,#0x14]
;;;83       RCC_OscInitStruct.HSEState = RCC_HSE_ON;
000018  0428              LSLS     r0,r5,#16
00001a  9007              STR      r0,[sp,#0x1c]
;;;84       RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV5;
00001c  2104              MOVS     r1,#4
00001e  9108              STR      r1,[sp,#0x20]
;;;85       RCC_OscInitStruct.HSIState = RCC_HSI_ON;
000020  950a              STR      r5,[sp,#0x28]
;;;86       RCC_OscInitStruct.Prediv1Source = RCC_PREDIV1_SOURCE_PLL2;
000022  9006              STR      r0,[sp,#0x18]
;;;87       RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
000024  2402              MOVS     r4,#2
000026  940d              STR      r4,[sp,#0x34]
;;;88       RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
000028  900e              STR      r0,[sp,#0x38]
;;;89       RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
00002a  f44f10e0          MOV      r0,#0x1c0000
00002e  900f              STR      r0,[sp,#0x3c]
;;;90       RCC_OscInitStruct.PLL2.PLL2State = RCC_PLL2_ON;
000030  9410              STR      r4,[sp,#0x40]
;;;91       RCC_OscInitStruct.PLL2.PLL2MUL = RCC_PLL2_MUL8;
000032  f44f60c0          MOV      r0,#0x600
000036  9011              STR      r0,[sp,#0x44]
;;;92       RCC_OscInitStruct.PLL2.HSEPrediv2Value = RCC_HSE_PREDIV2_DIV5;
000038  2040              MOVS     r0,#0x40
00003a  9012              STR      r0,[sp,#0x48]
;;;93       if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
00003c  a805              ADD      r0,sp,#0x14
00003e  f7fffffe          BL       HAL_RCC_OscConfig
000042  b108              CBZ      r0,|L2.72|
;;;94       {
;;;95         Error_Handler();
000044  f7fffffe          BL       Error_Handler
                  |L2.72|
;;;96       }
;;;97       /** Initializes the CPU, AHB and APB buses clocks
;;;98       */
;;;99       RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
000048  200f              MOVS     r0,#0xf
00004a  9000              STR      r0,[sp,#0]
;;;100                                  |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
;;;101      RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
00004c  9401              STR      r4,[sp,#4]
;;;102      RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
00004e  2000              MOVS     r0,#0
000050  9002              STR      r0,[sp,#8]
;;;103      RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
000052  f44f6180          MOV      r1,#0x400
000056  9103              STR      r1,[sp,#0xc]
;;;104      RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
000058  9004              STR      r0,[sp,#0x10]
;;;105    
;;;106      if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
00005a  2102              MOVS     r1,#2
00005c  4668              MOV      r0,sp
00005e  f7fffffe          BL       HAL_RCC_ClockConfig
000062  b108              CBZ      r0,|L2.104|
;;;107      {
;;;108        Error_Handler();
000064  f7fffffe          BL       Error_Handler
                  |L2.104|
;;;109      }
;;;110      /** Configure the Systick interrupt time
;;;111      */
;;;112      __HAL_RCC_PLLI2S_ENABLE();
000068  4801              LDR      r0,|L2.112|
00006a  6705              STR      r5,[r0,#0x70]
;;;113    }
00006c  b013              ADD      sp,sp,#0x4c
00006e  bd30              POP      {r4,r5,pc}
;;;114    
                          ENDP

                  |L2.112|
                          DCD      0x42420000

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  main PROC
;;;30     
;;;31     int main(void)
000000  f7fffffe          BL       HAL_Init
;;;32     {
;;;33       /* USER CODE BEGIN 1 */
;;;34     
;;;35       /* USER CODE END 1 */
;;;36     
;;;37       /* MCU Configuration--------------------------------------------------------*/
;;;38     
;;;39       /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
;;;40       HAL_Init();
;;;41     
;;;42       /* Configure the system clock */
;;;43       SystemClock_Config();
000004  f7fffffe          BL       SystemClock_Config
;;;44     
;;;45       /* Initialize all configured peripherals */
;;;46       MX_GPIO_Init();
000008  f7fffffe          BL       MX_GPIO_Init
;;;47       MX_USART1_UART_Init();
00000c  f7fffffe          BL       MX_USART1_UART_Init
;;;48       MX_USART2_UART_Init();
000010  f7fffffe          BL       MX_USART2_UART_Init
;;;49       MX_UART4_Init();
000014  f7fffffe          BL       MX_UART4_Init
;;;50     	printf("bsp init sucess ! \r\n");
000018  a006              ADR      r0,|L3.52|
00001a  f7fffffe          BL       __2printf
;;;51     	
;;;52       MX_LWIP_Init();
00001e  f7fffffe          BL       MX_LWIP_Init
;;;53     	
;;;54     	printf("lwip %s init sucess ! \r\n",LWIP_VERSION_STRING);
000022  a10a              ADR      r1,|L3.76|
000024  a00b              ADR      r0,|L3.84|
000026  f7fffffe          BL       __2printf
;;;55       /* USER CODE BEGIN 2 */
;;;56     	App_init();
00002a  f7fffffe          BL       App_init
                  |L3.46|
;;;57       /* USER CODE END 2 */
;;;58     
;;;59       /* Infinite loop */
;;;60       /* USER CODE BEGIN WHILE */
;;;61       while (1)
;;;62       {
;;;63         /* USER CODE END WHILE */
;;;64     		MX_LWIP_Process();
00002e  f7fffffe          BL       MX_LWIP_Process
000032  e7fc              B        |L3.46|
;;;65         /* USER CODE BEGIN 3 */
;;;66       }
;;;67       /* USER CODE END 3 */
;;;68     }
;;;69     
                          ENDP

                  |L3.52|
000034  62737020          DCB      "bsp init sucess ! \r\n",0
000038  696e6974
00003c  20737563
000040  65737320
000044  21200d0a
000048  00      
000049  00                DCB      0
00004a  00                DCB      0
00004b  00                DCB      0
                  |L3.76|
00004c  322e312e          DCB      "2.1.2",0
000050  3200    
000052  00                DCB      0
000053  00                DCB      0
                  |L3.84|
000054  6c776970          DCB      "lwip %s init sucess ! \r\n",0
000058  20257320
00005c  696e6974
000060  20737563
000064  65737320
000068  21200d0a
00006c  00      
00006d  00                DCB      0
00006e  00                DCB      0
00006f  00                DCB      0

;*** Start embedded assembler ***

#line 1 "..\\App\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REV16|
#line 463 "..\\Drivers\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___6_main_c_main____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REVSH|
#line 478
|__asm___6_main_c_main____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____RRX|
#line 665
|__asm___6_main_c_main____RRX| PROC
#line 666

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
