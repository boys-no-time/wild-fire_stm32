; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\objects\retarget.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\retarget.d --cpu=Cortex-M3 --apcs=interwork -O1 --diag_suppress=9931 -I..\Inc -I..\Drivers\STM32F1xx_HAL_Driver\Inc\Legacy -I..\Drivers\STM32F1xx_HAL_Driver\Inc -I..\Drivers\CMSIS\Device -I..\Drivers\CMSIS\Include -I..\Middlewares\Third_Party\LwIP\src\include -I..\Middlewares\Third_Party\LwIP\system -I..\Middlewares\Third_Party\LwIP\src\include\netif\ppp -I..\Middlewares\Third_Party\LwIP\src\include\lwip -I..\Middlewares\Third_Party\LwIP\src\include\lwip\apps -I..\Middlewares\Third_Party\LwIP\src\include\lwip\priv -I..\Middlewares\Third_Party\LwIP\src\include\lwip\prot -I..\Middlewares\Third_Party\LwIP\src\include\netif -I..\Middlewares\Third_Party\LwIP\src\include\posix -I..\Middlewares\Third_Party\LwIP\src\include\posix\sys -I..\Middlewares\Third_Party\LwIP\system\arch -I..\App -I..\Middlewares\Third_Party\LwIP\system -I.\RTE\_f107vc -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=530 -DSTM32F10X_CL -D_RTE_ -DUSE_HAL_DRIVER -DSTM32F107xC --omf_browse=.\objects\retarget.crf ..\Src\retarget.c]
                          THUMB

                          AREA ||i.$Sub$$_sys_open||, CODE, READONLY, ALIGN=1

                  ||$Sub$$_sys_open|| PROC
;;;94     extern void $Super$$_sys_open(void);
;;;95     FILEHANDLE $Sub$$_sys_open(const char * name, int openmode)
000000  2000              MOVS     r0,#0
;;;96     {
;;;97         UNUSED(name);
;;;98         UNUSED(openmode);
;;;99     	return 0;
;;;100    }
000002  4770              BX       lr
;;;101    
                          ENDP


                          AREA ||i._read||, CODE, READONLY, ALIGN=1

                  _read PROC
;;;62     
;;;63     int _read(int fd, char *ptr, int len)
000000  4610              MOV      r0,r2
;;;64     {
;;;65         UNUSED(fd);
;;;66         UNUSED(ptr);
;;;67     
;;;68         /* Read "len" of char to "ptr" from file id "fd"
;;;69          * Return number of char read.
;;;70          * Need implementing with UART here. */
;;;71         return len;
;;;72     }
000002  4770              BX       lr
;;;73     
                          ENDP


                          AREA ||i._sys_exit||, CODE, READONLY, ALIGN=1

                  _sys_exit PROC
;;;79     
;;;80     void _sys_exit(int returncode)   /* never returns */
000000  4770              BX       lr
;;;81     {
;;;82         UNUSED(returncode);
;;;83     }
;;;84     
                          ENDP


                          AREA ||i._ttywrch||, CODE, READONLY, ALIGN=1

                  _ttywrch PROC
;;;73     
;;;74     void _ttywrch(int ch)
000000  f7ffbffe          B.W      __io_putchar
;;;75     {
;;;76         __io_putchar(ch);
;;;77         return;
;;;78     }
;;;79     
                          ENDP


                          AREA ||i._write||, CODE, READONLY, ALIGN=1

                  _write PROC
;;;47     
;;;48     int _write(int fd, char *ptr, int len)
000000  b570              PUSH     {r4-r6,lr}
;;;49     {
000002  460c              MOV      r4,r1
000004  4616              MOV      r6,r2
;;;50         UNUSED(fd);
;;;51         int i = 0;
000006  2500              MOVS     r5,#0
000008  e009              B        |L5.30|
                  |L5.10|
;;;52         while (*ptr && (i < len)) {
;;;53             __io_putchar(*ptr);
00000a  f7fffffe          BL       __io_putchar
;;;54             if (*ptr == '\n') {
00000e  7820              LDRB     r0,[r4,#0]
000010  280a              CMP      r0,#0xa
000012  d102              BNE      |L5.26|
;;;55                 __io_putchar('\r');
000014  200d              MOVS     r0,#0xd
000016  f7fffffe          BL       __io_putchar
                  |L5.26|
;;;56             }
;;;57             i++;
00001a  1c6d              ADDS     r5,r5,#1
;;;58             ptr++;
00001c  1c64              ADDS     r4,r4,#1
                  |L5.30|
00001e  7820              LDRB     r0,[r4,#0]            ;52
000020  b108              CBZ      r0,|L5.38|
000022  42b5              CMP      r5,r6                 ;52
000024  dbf1              BLT      |L5.10|
                  |L5.38|
;;;59         }
;;;60         return i;
000026  4628              MOV      r0,r5
;;;61     }
000028  bd70              POP      {r4-r6,pc}
;;;62     
                          ENDP


                          AREA ||i.fputc||, CODE, READONLY, ALIGN=2

                  fputc PROC
;;;21     #ifdef __CC_ARM //using Keil
;;;22     int fputc(int ch, FILE *fp)
000000  b513              PUSH     {r0,r1,r4,lr}
;;;23     {
;;;24         //UNUSED(ch);
;;;25         UNUSED(fp);
;;;26     	//TODO: USART output here
;;;27     	//return 0;
;;;28         HAL_UART_Transmit(&huart4, (uint8_t *)&ch,1,HAL_MAX_DELAY);
000002  f04f33ff          MOV      r3,#0xffffffff
000006  2201              MOVS     r2,#1
000008  4669              MOV      r1,sp
00000a  4802              LDR      r0,|L6.20|
00000c  f7fffffe          BL       HAL_UART_Transmit
;;;29     
;;;30     		return ch;
000010  9800              LDR      r0,[sp,#0]
;;;31     }
000012  bd1c              POP      {r2-r4,pc}
;;;32     #else
                          ENDP

                  |L6.20|
                          DCD      huart4

                          AREA ||i.retarget_init||, CODE, READONLY, ALIGN=1

                  retarget_init PROC
;;;42     
;;;43     void retarget_init()
000000  4770              BX       lr
;;;44     {
;;;45         // Initialize UART
;;;46     }
;;;47     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\Src\\retarget.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_retarget_c_fputc____REV16|
#line 463 "..\\Drivers\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___10_retarget_c_fputc____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_retarget_c_fputc____REVSH|
#line 478
|__asm___10_retarget_c_fputc____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_retarget_c_fputc____RRX|
#line 665
|__asm___10_retarget_c_fputc____RRX| PROC
#line 666

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
